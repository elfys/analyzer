"""add test structure tables

Revision ID: 76cc9bcdd45c
Revises: 87540ed003e1
Create Date: 2023-03-13 19:38:52.833757

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "76cc9bcdd45c"
down_revision = "fdf656f33b09"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "ts_conditions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("chip_id", sa.Integer(), nullable=False),
        sa.Column("structure_type", sa.VARCHAR(length=10), nullable=False),
        sa.Column("ts_step", sa.SmallInteger(), nullable=False),
        sa.Column("ts_number", sa.SmallInteger(), nullable=False),
        sa.Column("datetime", sa.DATETIME(), nullable=False),
        sa.ForeignKeyConstraint(
            ["chip_id"],
            ["chip.id"],
            name="ts_conditions__chip",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "chip_id",
            "ts_step",
            "ts_number",
            "structure_type",
            name="unique_ts_condition",
        ),
    )
    op.create_index(op.f("ix_ts_conditions_chip_id"), "ts_conditions", ["chip_id"], unique=False)
    op.create_table(
        "ts_data",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("current", sa.Float(), nullable=False),
        sa.Column("voltage_1", sa.Float(), nullable=False),
        sa.Column("voltage_2", sa.Float(), nullable=False),
        sa.Column("resistance", sa.Float(), nullable=False),
        sa.Column("conditions_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["conditions_id"],
            ["ts_conditions.id"],
            name="ts_data__conditions",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_ts_data_conditions_id"), "ts_data", ["conditions_id"], unique=False)


def downgrade() -> None:
    op.drop_constraint("ts_data__conditions", "ts_data", type_="foreignkey")
    op.drop_index(op.f("ix_ts_data_conditions_id"), table_name="ts_data")
    op.drop_table("ts_data")
    op.drop_constraint("ts_conditions__chip", "ts_conditions", type_="foreignkey")
    op.drop_index(op.f("ix_ts_conditions_chip_id"), table_name="ts_conditions")
    op.drop_table("ts_conditions")
